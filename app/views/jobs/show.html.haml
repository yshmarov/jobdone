.row
  .container
    .card
      .card-header
        %b Job
      .card-body
        %b Event:
        = link_to @job.event, event_path(@job.event)
        %br
        %b Client:
        = link_to @job.event.client, client_path(@job.event.client)
        %br
        %b Starts at:
        = @job.event.starts_at.strftime('%d/%m/%Y %H:%M')
        %br
        %b Ends at:
        = @job.event.ends_at.strftime('%d/%m/%Y %H:%M')
        (#{@job.service_duration} min)
        %br
        %b Location:
        = link_to @job.event.location, location_path(@job.event.location)
        %br
        %b Status:
        = status_label(@job.event.status)
        %hr
        %b Service:
        = link_to @job.service.full_name_with_price, service_path(@job.service)
        %br
        %b Employee:
        = link_to @job.member, member_path(@job.member)
        %hr
        %b Client planned price:
        /= @job.client_price_cents
        = number_to_currency(@job.client_price_cents, :unit => "#{Tenant.current_tenant.default_currency.upcase} ")
        %br
        %b Employee planned price:
        /= @job.member_price_cents if policy(@job).update?
        = number_to_currency(@job.member_price_cents, :unit => "#{Tenant.current_tenant.default_currency.upcase} ") if policy(@job).update?
        %br
        %b Client due price:
        /= @job.client_due_price_cents
        = number_to_currency(@job.client_due_price_cents, :unit => "#{Tenant.current_tenant.default_currency.upcase} ")
        %br
        %b Employee due price:
        /= @job.member_due_price_cents if policy(@job).update?
        = number_to_currency(@job.member_due_price_cents, :unit => "#{Tenant.current_tenant.default_currency.upcase} ")  if policy(@job).update?
        %hr
        %b Created at:
        = @job.created_at.strftime('%d/%b/%Y %H:%M')
        %br
        %b Updated at:
        = @job.updated_at.strftime('%d/%b/%Y %H:%M')

%br
