- model_class = Member
= search_form_for @ransack_members, as: :members_search, url: members_path do |f|
  .card.card-default
    .container-fluid
      .card-heading
        %h4.card-title.float-left{:style => "padding-top: 7.5px;"} 
          .input-group
            /.fa.fa-user
            .mr-sm-2
              %b=t '.title', :default => model_class.model_name.human.pluralize.titleize
            = f.search_field :full_name_cont, class: 'form-control', style: 'float: left; width: 150px; ', placeholder: "#{model_class.human_attribute_name(:name)}", :autocomplete => :off
            %span.input-group-append
              %button.btn.btn-secondary{:type => "submit"}
                %span.fa.fa-search{"aria-hidden" => "true"}
        %h4.card-title.float-right{:style => "padding-top: 7.5px;"} 
          = link_to '', members_path, class: "btn btn-secondary fa fa-redo", title: 'Refresh', 'data-toggle' => 'tooltip', 'data-placement' => 'top'
          - if policy(Member).create?
            - if (Tenant.current_tenant.can_create_members?)
              = link_to t('.new', :default => t("helpers.links.new")), new_member_path, class: 'btn btn-sm btn-primary'
            - else
              %span.d-inline-block{"data-toggle" => "tooltip", :tabindex => "0", :title => "Unlock Premium Feature"}
                %button.btn.btn-sm.btn-primary{:disabled => "disabled", :style => "pointer-events: none;", :type => "button"}
                  = t('.new', :default => t("helpers.links.new"))
                  .fa.fa-lock
- @members.each do |member|
  .card
    .card-header.bg-light
      .row
        /contacts
        .col-sm-3
          - if member.user_online.present?
            %i.fa.fa-fire{:style => "color:red;"}
            /%i.far.fa-circle{:style => "color:green;"}
          - if member.id == current_user.member.id
            .fa.fa-user
          = link_to member.full_name, member_path(member) if policy(member).show?
          = status_label(member.status)
          - if member.phone_number.present?
            .row
            .fa.fa-phone
            = link_to "tel:#{member.phone_number}", class: "button" do
              #{number_to_phone(member.phone_number)}
          - if member.email.present? 
            .row
            .fa.fa-envelope
            %a{:href => "mailto:#{member.email}"}= member.email
          .row
          = link_to '', member, class: "btn btn-primary fa fa-eye btn-sm" if policy(member).show?
          = link_to '', edit_member_path(member), class: "btn btn-warning fa fa-edit btn-sm"  if policy(member).edit?
          = link_to '', member, method: :delete, data: { confirm: 'Are you sure?' }, class: "btn btn-danger fa fa-trash btn-sm"  if policy(member).destroy?
        /location & skills
        .col-sm-3
          - if member.location.present?
            .fa.fa-map-marker-alt
            = link_to member.location, location_path(member.location)
            .row
          - if member.skills.any?
            .fa.fa-hand-paper
            %small
              /= member.skills.collect{|r| r.service_category}.to_sentence
              - member.skills.each do |skill|
                .badge.badge-secondary
                  = skill.service_category
        /ADMIN - stats
        - if current_user.has_role?(:admin)
          .col-sm-2
            .fa.fa-balance-scale
            = number_to_currency(member.balance_cents, unit: "#{Tenant.current_tenant.default_currency.upcase}", format: "%n %u")
            .row
            .fa.fa-calendar
            = member.jobs_count
        /USER
        %small.col-sm-4
          /////////////////////user account/////////////////////
          - if member.user.present?
            = member.user.email
            .row
            /////////////////////user roles/////////////////////
            /= member.user.roles.where.not("name = 'owner'").collect{|r| r.name}.to_sentence
            - member.user.roles.where.not("name = 'owner'").each do |r| 
              = role_label(r.name)
            - if member.user.confirmed_at?
              .row
              Has access
            - else
              .row
              No access. Resend invitation email
            - unless member == current_user.member
              - if member.user.present?
                .row
                = link_to "<i class='fa-fw fa fa-trash'></i> Delete Access".html_safe, member.user, method: :delete, data: { confirm: 'Are you sure?' }, class: "badge badge-danger" if policy(member.user).destroy?
          - else
            Invite user.
            - if member.active?
              - if member.email.present?
                Devise invitable here
                /- if policy(User).create?
                /  = simple_form_for(User.new, url: user_invitation_path) do |z|
                /    = z.input :email, input_html: {value: member.email}, as: :hidden
                /    = z.input :member_id, input_html: {value: member.id}, as: :hidden
                /    = z.button :submit, 'Invite', class: "btn btn-success btn-sm"
              - else
                Add email to invite user
            - else
              Terminated
          /  - unless member.associations?
          /    - if policy(member).destroy?
          /      = link_to 'x totally', member, :method => :delete, :data => { :confirm => 'Are you sure?' }, class: "btn btn-default btn-sm"
%p
.container.table-responsive
  = will_paginate @members, renderer: WillPaginate::ActionView::BootstrapLinkRenderer
%br
/= Tenant.current_tenant.users.count
/- Tenant.current_tenant.users.each do |user| 
/  %p= user.email