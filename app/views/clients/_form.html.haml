-# frozen_string_literal: true
= simple_form_for @client do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?
  .form-inputs
    .text-center
      - if @client.avatar.attached?
        %img.rounded{:alt => "XLPLAN", :src => "#{url_for(@client.avatar)}", :width => "200px"}/
      - else
        .far.fa-user{:style => "font-size:60px"}
        .row
        = f.label :avatar
      %p
      = f.file_field :avatar
    = f.input :first_name, input_html: { autocomplete: 'nope' }
    = f.input :last_name, input_html: { autocomplete: 'nope' }
    - if policy(@client).show_phone?
      = f.input :phone_number, input_html: { autocomplete: 'nope' }, placeholder: "+38"
    /= f.input :code, input_html: { autocomplete: 'nope' }
    = f.input :email, input_html: { autocomplete: 'nope' }
    = f.input :date_of_birth, start_year: Date.today.year - 65, end_year: Date.today.year - 3, include_blank: true
    / #### GENDER FIELD STARTS HERE ####
    %p
    = f.label :gender
    /= f.error :gender, class: 'text-danger'
    %br
    = f.radio_button :gender, 'undisclosed'
    = f.label :gender_undisclosed
    = f.radio_button :gender, 'female'
    = f.label :gender_female
    = f.radio_button :gender, 'male'
    = f.label :gender_male
    / #### GENDER FIELD ENDS HERE ####
    / #### ADDRESS FIELD STARTS HERE ####
    .fields
      = f.fields_for :address, OpenStruct.new(f.object.address || {}) do |a|
        .row
          .col-6
            = f.label :country
            = a.text_field :country, id: :country, class: 'form-control'
          .col-6
            = f.label :city
            = a.text_field :city, id: :city, class: 'form-control'
          .col-6
            = f.label :street
            = a.text_field :street, id: :street, input_html: { autocomplete: 'nope' }, class: 'form-control'
          .col-6
            = f.label :zip
            = a.text_field :zip, id: :zip, input_html: { autocomplete: 'nope' }, class: 'form-control'
    / #### ADDRESS FIELD ENDS HERE ####
  = f.input :lead_source, collection: Client.lead_sources, include_blank: false, as: :radio_buttons

  = f.label :tag
  /= f.select :tag_ids, Tag.all.pluck(:name, :id), {}, { multiple: true, class: "selectize" }
  = f.select :tag_ids, Tag.all.collect {|p| [ I18n.t(p.name, scope: [:activerecord, :attributes, :client, :tags]), p.id ] }, {}, { multiple: true, class: "selectize" }

  = f.input :personal_data_consent
  = f.input :event_created_notifications
  = f.input :marketing_notifications
  %hr
  .form-actions
    = f.button :submit