- model_class = Client
/= render 'clients/form'
= search_form_for @ransack_clients, as: :clients_search, url: @ransack_path do |f|
  .card.bg-light
    .card-header
      .row
        .col-lg-4
          %h5
            .fa.fa-users
            /%b=t '.title', :default => model_class.model_name.human.pluralize.titleize
            %b= t "#{controller_name}_#{action_name}"
            - if @ransack_clients.client_tags_tag_name_cont.present?
              .badge.badge-info
                = I18n.t(@ransack_clients.client_tags_tag_name_cont, scope: [:activerecord, :attributes, :client, :tags])

            .badge.badge-info
              = @clients.count
        .col-lg-4
          .input-group
            .mr-md-2
            = f.search_field :first_name_or_last_name_or_phone_number_cont, class: 'form-control-sm', style: 'float: left; width: 150px; ', placeholder: t('sidebar.search_client'), :autocomplete => :off
            %span.input-group-append
              %button.btn.btn-secondary.btn-sm{:type => "submit"}
                %span.fa.fa-search{"aria-hidden" => "true"}
        .col-lg-4
          .mr.mt-1.float-right
            - unless params.has_key?(:clients_search)
              %button.btn.btn-sm.btn-secondary{"data-target" => "#accordion", "data-toggle" => "collapse", :type => "button"}
                .fa.fa-search
                .fa.fa-chevron-down
            - else
              = link_to '', @ransack_path, class: "btn btn-secondary fa fa-redo", title: 'Refresh', 'data-toggle' => 'tooltip', 'data-placement' => 'top'
            - if policy(Client).create?
              = link_to t('.new', :default => t("helpers.links.new")), new_client_path, class: 'btn btn-sm btn-primary'
    - unless params.has_key?(:clients_search)
      #accordion.collapse
        .card-header
          .row
            .col-md-4
              = sort_link @ransack_clients, :jobs_amount_sum do
                .ml.ml-2.fa.fa-calendar-check
                = model_class.human_attribute_name(:jobs_amount_sum)
              .row
              = sort_link @ransack_clients, :payments_amount_sum do
                .ml.ml-2.fa.fa-hand-holding-usd
                = model_class.human_attribute_name(:payments_amount_sum)
              .row
              = sort_link @ransack_clients, :balance do
                .ml.ml-2.fa.fa-balance-scale
                = model_class.human_attribute_name(:balance)
            .col-md-4
              = sort_link @ransack_clients, :events_count do
                .ml.ml-2.fa.fa-calendar-check
                = model_class.human_attribute_name(:events_count)
              .row
              = sort_link @ransack_clients, :inbound_payments_count do
                .ml.ml-2.fa.fa-hand-holding-usd
                = model_class.human_attribute_name(:inbound_payments_count)
    - else
      #accordion.collapse.show
        .card-header
          .row
            .col-md-4
              = sort_link @ransack_clients, :jobs_amount_sum do
                .ml.ml-2.fa.fa-calendar-check
                = model_class.human_attribute_name(:jobs_amount_sum)
              .row
              = sort_link @ransack_clients, :payments_amount_sum do
                .ml.ml-2.fa.fa-hand-holding-usd
                = model_class.human_attribute_name(:payments_amount_sum)
              .row
              = sort_link @ransack_clients, :balance do
                .ml.ml-2.fa.fa-balance-scale
                = model_class.human_attribute_name(:balance)
            .col-md-4
              = sort_link @ransack_clients, :events_count do
                .ml.ml-2.fa.fa-calendar-check
                = model_class.human_attribute_name(:events_count)
              .row
              = sort_link @ransack_clients, :inbound_payments_count do
                .ml.ml-2.fa.fa-hand-holding-usd
                = model_class.human_attribute_name(:inbound_payments_count)
- @clients.each do |client|
  .card
    .card-header.bg-light
      .row
        .col-md-5
          - if client.gender == "female"
            .fa.fa-female
          - elsif client.gender == "male"
            .fa.fa-male
          - else
            .fa.fa-question
          /.fa.fa-users
          = link_to client.full_name, client_path(client) if policy(client).show?
          - if client.phone_number.present? && policy(client).show_phone?
            .row
            .fa.fa-phone
            = link_to "tel:#{client.phone_number}", class: "button" do
              #{number_to_phone(client.phone_number)}
            = link_to "viber://chat?number=#{client.phone_number}", class: "button" do
              .fab.fa-viber
          - if client.email.present? 
            .row
            .fa.fa-envelope
            %a{:href => "mailto:#{client.email}"}= client.email
          - if client.date_of_birth.present? 
            .row
            .fa.fa-birthday-cake
            = client.date_of_birth
          - if client.client_tags.any?
            .row
            - client.client_tags.each do |client_tag|
              = link_to clients_path(clients_search: {client_tags_tag_name_cont: client_tag.tag.name}) do 
                .badge.badge-info
                  = I18n.t(client_tag.tag, scope: [:activerecord, :attributes, :client, :tags])
        .col-md-4
          .fa.fa-calendar-check
          = number_to_currency(client.jobs_amount_sum_cents, unit: "#{Tenant.current_tenant.default_currency.upcase}", format: "%n %u")
          (#{client.events_count})
          .row
          .fa.fa-hand-holding-usd
          = number_to_currency(client.payments_amount_sum_cents, unit: "#{Tenant.current_tenant.default_currency.upcase}", format: "%n %u")
          (#{client.inbound_payments_count})
          .row
          .fa.fa-balance-scale
          = number_to_currency(client.balance_cents, unit: "#{Tenant.current_tenant.default_currency.upcase}", format: "%n %u")
        .col-md-1
          .fa.fa-comment-alt
          = client.comments.count
        .col-md-2
          .fa.fa-clock
          #{l(client.created_at, format: "%a")} #{l(client.created_at, format: "%d/%b/%Y %H:%M")}
          .row
          = link_to '', edit_client_path(client), class: "btn btn-warning fa fa-edit btn-sm"  if policy(client).edit?
          = link_to '', client, method: :delete, data: { confirm: 'Are you sure?' }, class: "btn btn-danger fa fa-trash btn-sm"  if policy(client).destroy?
          /with AJAX
          /= link_to "Delete", client_path(client), { method: "delete", remote: true, data: { confirm: "Are you sure?" } }
%p
.container.table-responsive
  = will_paginate @clients, renderer: WillPaginate::ActionView::BootstrapLinkRenderer
%br
