- model_class = Service
= search_form_for @q, url: services_path do |f|
  .card
    .card-header
      %h5.float-left
        .fa.fa-hand-paper
        %b=t '.title', :default => model_class.model_name.human.pluralize.titleize
      %h5.float-right
        - unless params.has_key?(:q)
          %button.btn.btn-sm.btn-secondary{"data-target" => "#accordion", "data-toggle" => "collapse", :type => "button"}
            .fa.fa-search
            .fa.fa-chevron-down
        - else
          = link_to '', services_path, class: "btn btn-secondary fa fa-redo", title: 'Refresh', 'data-toggle' => 'tooltip', 'data-placement' => 'top'
        - if policy(Service).create?
          = link_to t('.new', :default => t("helpers.links.new")), new_service_path, class: 'btn btn-sm btn-primary'
    - unless params.has_key?(:q)
      #accordion.collapse
        .card-header
          .row
            .col-md-4
              = f.text_field :name_cont, class: "form-control", placeholder: "#{model_class.human_attribute_name(:name)}", autofocus: true, :autocomplete => :off
            .col-md-4
              = f.select :service_category_name_cont, options_from_collection_for_select(ServiceCategory.all, :name, :name, @q.service_category_name_cont), { :include_blank => true }, :class => "form-control"
            .col-md-4
              = f.submit
    - else
      #accordion.collapse.show
        .card-header
          .row
            .col-md-4
              = f.text_field :name_cont, class: "form-control", placeholder: "#{model_class.human_attribute_name(:name)}", autofocus: true, :autocomplete => :off
            .col-md-4
              = f.select :service_category_name_cont, options_from_collection_for_select(ServiceCategory.all, :name, :name, @q.service_category_name_cont), { :include_blank => true }, :class => "form-control"
            .col-md-4
              = f.submit
.table-responsive-xl
  %table.table-sm.table-striped
    %thead
      %tr
        %th= sort_link @q, :name, :name
        %th
        %th= sort_link @q, :service_category_name, :service_category_name
        %th= model_class.human_attribute_name(:description)
        %th= sort_link @q, :duration, :duration
        %th= sort_link @q, :client_price, :client_price
        %th= sort_link @q, :member_percent, :member_percent
        %th= sort_link @q, :member_price, :member_price
        /ADMIN - stats
        - if current_user.has_role?(:admin)
          %th= sort_link @q, :jobs_count, model_class.human_attribute_name(:jobs_count)
    %tbody
      - @services.each do |service|
        %tr
          %td
            = link_to service.name, service_path(service)
            .row
            = status_label(service.status)
          %td
            = link_to '', service_path(service), class: "btn btn-primary fa fa-eye btn-sm" if policy(service).show?
            = link_to '', edit_service_path(service), class: "btn btn-warning fa fa-edit btn-sm" if policy(service).edit?
            = link_to '', service, method: :delete, data: { confirm: 'Are you sure?' }, class: "btn btn-danger fa fa-trash btn-sm" if policy(service).destroy?
          %td
            .badge.badge-secondary
              = service.service_category
          %td
            %small
              = service.description
          %td
            .fa.fa-clock
            = service.duration
          %td= number_to_currency(service.client_price_cents, unit: "#{Tenant.current_tenant.default_currency.upcase}", format: "%n %u")
          %td= number_to_percentage(service.member_percent, precision: 0)
          %td= number_to_currency(service.member_price_cents, unit: "#{Tenant.current_tenant.default_currency.upcase}", format: "%n %u")
          /ADMIN - stats
          - if current_user.has_role?(:admin)
            %td
              .fa.fa-calendar-check
              = service.jobs_count
.container.table-responsive
  = will_paginate @services, renderer: WillPaginate::ActionView::BootstrapLinkRenderer
%br
