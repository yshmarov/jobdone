-# frozen_string_literal: true
= simple_form_for(@service, local: true) do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

  .form-inputs
    = f.input :name, input_html: { autocomplete: 'off' }

    = f.label :service_category_id
    = f.collection_select :service_category_id, ServiceCategory.order(:name), :id, :name, {prompt: 'Select or create a category'}, {class: 'selectize-category'}
    = f.error :service_category, class: 'text-danger'

    = f.input :description, input_html: { autocomplete: 'off' }

    /- if f.object.new_record?
    /  = f.input :duration, input_html: { value: '', autocomplete: 'off' }, placeholder: "0"
    /  = f.input :client_price_cents, input_html: { value: '', autocomplete: 'off' }, placeholder: "0"
    /  = f.input :member_percent, input_html: { value: '', autocomplete: 'off' }, placeholder: "0"
    /- else
    /  = f.input :duration
    /  = f.input :client_price_cents, input_html: { autocomplete: 'off' }
    /  = f.input :member_percent
    
    = f.input :duration
    = f.input :client_price_cents, input_html: { autocomplete: 'off' }
    = f.input :member_percent
    = f.input :production_cost_cents
  
    = f.input :active

    = f.input :online_booking

  %hr
  .form-actions
    = f.button :submit, class: "btn btn-success"