-# frozen_string_literal: true
= simple_form_for(@service, local: true) do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

  .form-inputs
    = f.input :name, autofocus: true, input_html: { autocomplete: 'off' }

    = f.label :service_category_id
    = f.collection_select :service_category_id, ServiceCategory.order(:name), :id, :name, {prompt: 'Select or create a category'}, {class: 'selectize-category'}
    = f.error :service_category, class: 'text-danger'

    = f.input :description, input_html: { autocomplete: 'off' }
    /= f.input :duration, collection: ['15', '30', '45', '60', '75', '90', '120']
    /= f.input :duration, collection: [['0', 'female'], ['1', 'male']]
    = f.input :duration, collection: [['15 minutes', '15'], ['30  minutes', '30'], ['45 minutes', '45'], ['1 H', '60'], 
                                      ['1 H 15 minutes', '75'], ['1 H 30 minutes', '90'], ['1 H 45 minutes', '105'], 
                                      ['2 H', '120'], ['2 H 15 minutes', '135'], ['2 H 30 minutes', '150'], ['2 H 45 minutes', '165'],
                                      ['3 H', '180'], ['3 H 15 minutes', '195'], ['3 H 30 minutes', '210'], ['3 H 45 minutes', '225'],
                                      ['4 H', '240']]

    = f.input :client_price_cents, input_html: { autocomplete: 'off' }
    = f.input :member_percent
  
    /Notification about repeat visit
    = f.input :repeat_reminder, collection: 0..90
    = f.input :status, :as => :radio_buttons, :collection => Service.statuses.keys.to_a, label:false

  .form-actions
    = f.button :submit, class: "btn btn-success"