- model_class = Contact
.card
  .card-header
    %h4.float-left
      .fa-fw.fa.fa-user-plus
      %b
        = t('sidebar.import_contacts')
        = @contacts.where.not(client_id: nil).count
        \/
        = @contacts.count
    %h5.float-right
      = link_to "/contacts/gmail", class: 'btn btn-success btn-sm mr ml-1' do 
        .fab.fa-google
        = t('.import_google_contacts')
      - if Contact.any?
        = link_to t('.add_all'), contacts_add_all_path, class: 'btn btn-primary btn-sm mr ml-1'
- if !@contacts.nil?
  .table-responsive-xl
    %table.table-sm.table-striped
      %thead
        %tr
          %th
            /create contact
          /%th fill missing client data
          /%th import_id
          %th= model_class.human_attribute_name(:name)
          /%th first_name
          /%th last_name
          /%th address_1
          /%th address_2
          /%th city
          /%th region
          /%th postcode
          /%th country
          %th= model_class.human_attribute_name(:phone_number)
          %th= model_class.human_attribute_name(:email)
          /%th birthday
          /%th gender
          /%th relation
          /%th has client?
      %tbody
        - @contacts.each do |contact|
          %tr
            %td
              - unless contact.client.present?
                = button_to t('.create_client'), create_client_from_contact_contact_path(contact), method: :patch, class: 'btn btn-sm btn-primary mr-sm-2 btn-block'
              - else
                .text-center
                  .fa.fa-check
                  /Client exists
            /%td
            /  - unless contact.client.present?
            /    connect with client
            /    = select_tag :product,  options_for_select(@clients , params[:client]), id: "different_option_value_html", onchange: "this.form.submit();", include_blank: "Client?"
            /    /.row
            /    /= select_month(Date.today, {use_two_digit_numbers: true, prefix: 'select'},{:field_name => 'month', :id => 'start-month', onchange: 'this.form.submit()'})
            /    /= select_tag(:client_id, options_for_select(@clients))
            /    /= select("post", "person_id", @clients.collect {|p| [ p.full_name, p.id ] }, {include_blank: 'None'})
            /    /= select :client_id, @clients.map{|c| [c.full_name, c.id]}, {include_blank: false}, class: 'selectize'
            /    /= select_tag(:client_id, options_for_select(@clients.map{|c| [c.full_name, c.id]}))
            /    /= select_tag(:client_id), @clients.map{|c| [c.full_name, c.id]}, class: 'selectize'
            /    /= text_field_tag(:q)
            /    /= text_field_tag(:q), @clients.map{|c| [c.full_name, c.id]}, class: 'selectize'
            /%td= contact.import_id
            %td= contact.name
            /%td= contact.first_name
            /%td= contact.last_name
            /%td= contact.address_1
            /%td= contact.address_2
            /%td= contact.city
            /%td= contact.region
            /%td= contact.postcode
            /%td= contact.country
            %td= contact.phone_number
            %td= contact.email
            /%td= contact.birthday
            /%td= contact.gender
            /%td= contact.relation
            /%td
            /  = contact.client
            /  = contact.client_id

%p
.container.table-responsive
  = will_paginate @contacts, renderer: WillPaginate::ActionView::BootstrapLinkRenderer
%br
