- model_class = Event
= search_form_for @q, url: events_path do |f|
  .card.card-default
    .container-fluid
      .card-heading
        %h4.card-title.float-left{:style => "padding-top: 7.5px;"} 
          .fa.fa-calendar
          %b= t "#{controller_name}_#{action_name}"
        %h4.card-title.float-right{:style => "padding-top: 7.5px;"} 
          %button.btn.btn-sm.btn-secondary{"data-target" => "#accordion", "data-toggle" => "collapse", :type => "button"}
            .fa.fa-search
            .fa.fa-chevron-down
            /Search
          = link_to "", events_path, class: "btn btn-secondary fa fa-redo", title: 'Refresh', 'data-toggle' => 'tooltip', 'data-placement' => 'top'
          - if policy(Event).create?
            = link_to t('.new', :default => t("helpers.links.new")), new_event_path, class: 'btn btn-sm btn-primary'
    #accordion.collapse
      .card-header
        .row
          .col-md-4
            = model_class.human_attribute_name(:client_id)
            /= f.search_field :client_full_name_cont, autofocus: true, class: "form-control", style: 'float: left; width: 100%; display: block', placeholder: "Client name", :autocomplete => :off
            = f.select :client_full_name_cont, Client.all.map{|c| [c.full_name, c.last_name]}, {include_blank: Client.all.length > 1}, class: 'selectize'
            = model_class.human_attribute_name(:member)
            /= f.search_field :jobs_member_full_name_cont, autofocus: true, class: "form-control", style: 'float: left; width: 100%; display: block', placeholder: "Member name", :autocomplete => :off
            = f.select :jobs_member_full_name_cont, Member.all.map{|c| [c.full_name, c.last_name]}, {include_blank: Member.all.length > 1}, class: 'selectize'
          .col-md-4
            .input-daterange
              = model_class.human_attribute_name(:after)
              = f.text_field :starts_at_gteq, "data-provide" => 'datepicker', class: "form-control", placeholder: "Date >= to", :autocomplete => :off
              = model_class.human_attribute_name(:before)
              = f.text_field :starts_at_lteq, "data-provide" => 'datepicker', class: "form-control", placeholder: "Date <= to", :autocomplete => :off
          .col-md-4
            = model_class.human_attribute_name(:status)
            = f.select :status_eq, Event.statuses.to_a.map { |w| [w[0].humanize, w[1]] }, {:include_blank => true}, :class => "form-control"
            = model_class.human_attribute_name(:service)
            /= f.search_field :jobs_service_name_cont, autofocus: true, class: "form-control", style: 'float: left; width: 100%; display: block', placeholder: "Service name", :autocomplete => :off
            = f.select :jobs_service_name_cont, Service.all.map{|c| [c.name, c.name]}, {include_blank: Service.all.length > 1}, class: 'selectize'
            .row
            = f.submit


/.table-responsive
/.container-fluid
- @events.each do |event|
  .card
    .card-header.bg-light
      .row
        .col-lg-2
          .text-center
            /= status_label(event.status)
            = link_to status_label(event.status), event
            .row
            = number_to_currency(event.client_price_cents, unit: "#{Tenant.current_tenant.default_currency.upcase}", format: "%n %u")
            .row
            /%section.bg-danger.text-center
            /  .container
            /    t
            /%hr{:color => "green"}/
            /%li.list-group-item
            /%hr
            = link_to '', event, class: "btn btn-primary fa fa-eye btn-sm" if policy(event).show?
            = link_to '', edit_event_path(event), class: "btn btn-warning fa fa-edit btn-sm" if policy(event).update?
            = link_to '', event, method: :delete, data: { confirm: 'Are you sure?' }, class: "btn btn-danger fa fa-trash btn-sm" if policy(event).destroy?
        .col-lg-4
          .fa.fa-user
          = link_to event.client, client_path(event.client)
          .row
          .fa.fa-map-marker-alt
          = link_to event.location, location_path(event.location)
          .row
          .fa.fa-clock
          #{l(event.starts_at, format: "%a")} #{l(event.starts_at, format: "%d/%b/%Y %H:%M")} -  #{l(event.ends_at, format: "%H:%M")} (#{event.duration} min)
        .col-lg-6
          .table-responsive
            - event.jobs.each do |job|
              .row
              .badge.badge-secondary
                = link_to job.service.full_name_with_price, service_path(job.service), class: 'text-white'
                \/
                = link_to job.member, member_path(job.member), class: 'text-white'
            .row
            = event.notes
            /= truncate(event.notes, length: 60)
%p
.container.table-responsive
  = will_paginate @events, renderer: WillPaginate::ActionView::BootstrapLinkRenderer
%br
