- model_class = Event
= search_form_for @q, url: events_path do |f|
  .card.card-default
    .container-fluid
      .card-heading
        %h4.card-title.float-left{:style => "padding-top: 7.5px;"} 
          %b= controller.action_name.humanize.titleize
          %b=t '.title', :default => model_class.model_name.human.pluralize.titleize
        %h4.card-title.float-right{:style => "padding-top: 7.5px;"} 
          = link_to "", events_path, class: "btn btn-secondary fa fa-redo", title: 'Refresh', 'data-toggle' => 'tooltip', 'data-placement' => 'top'
          - if policy(Event).create?
            = link_to t('.new', :default => t("helpers.links.new")), new_event_path, class: 'btn btn-sm btn-primary'
    .card-header
      .row
        .col-md-4
          = model_class.human_attribute_name(:member)
          /= f.search_field :jobs_member_full_name_cont, autofocus: true, class: "form-control", style: 'float: left; width: 100%; display: block', placeholder: "Member name", :autocomplete => :off
          = f.select :jobs_member_full_name_cont, Member.all.map{|c| [c.full_name, c.last_name]}, {include_blank: Member.all.length > 1}, class: 'selectize'
          = model_class.human_attribute_name(:client_id)
          /= f.search_field :client_full_name_cont, autofocus: true, class: "form-control", style: 'float: left; width: 100%; display: block', placeholder: "Client name", :autocomplete => :off
          = f.select :client_full_name_cont, Client.all.map{|c| [c.full_name, c.last_name]}, {include_blank: Client.all.length > 1}, class: 'selectize'
        .col-md-4
          .input-daterange
            = model_class.human_attribute_name(:after)
            = f.text_field :starts_at_gteq, "data-provide" => 'datepicker', class: "form-control", placeholder: "Date >= to", :autocomplete => :off
            = model_class.human_attribute_name(:before)
            = f.text_field :starts_at_lteq, "data-provide" => 'datepicker', class: "form-control", placeholder: "Date <= to", :autocomplete => :off
        .col-md-4
          = model_class.human_attribute_name(:status)
          = f.select :status_eq, Event.statuses.to_a.map { |w| [w[0].humanize, w[1]] }, {:include_blank => true}, :class => "form-control"
          = model_class.human_attribute_name(:service)
          /= f.search_field :jobs_service_name_cont, autofocus: true, class: "form-control", style: 'float: left; width: 100%; display: block', placeholder: "Service name", :autocomplete => :off
          = f.select :jobs_service_name_cont, Service.all.map{|c| [c.name, c.name]}, {include_blank: Service.all.length > 1}, class: 'selectize'
          .row
          = f.submit
.table-responsive
  %table#table1
    %thead
      %tr
        %th{:colspan => "3"}
        %th= sort_link @q, :client_last_name, model_class.human_attribute_name(:client_id)
        %th= sort_link @q, :location_id, :location_id
        %th= sort_link @q, :starts_at, model_class.human_attribute_name(:time)
        %th= sort_link @q, :status, :status
        %th= model_class.human_attribute_name(:services)
        /%th= model_class.human_attribute_name(:created_at)
    %tbody
      - @events.each do |event|
        %tr
          %td= link_to '', event, class: "btn btn-primary fa fa-eye btn-sm" if policy(event).show?
          %td= link_to '', edit_event_path(event), class: "btn btn-warning fa fa-edit btn-sm" if policy(event).update?
          %td= link_to '', event, method: :delete, data: { confirm: 'Are you sure?' }, class: "btn btn-danger fa fa-trash btn-sm" if policy(event).destroy?
          %td= link_to event.client, client_path(event.client)
          %td= link_to event.location, location_path(event.location)
          %td
            #{l(event.starts_at, format: "%A")} #{l(event.starts_at, format: "%d/%b/%Y %H:%M")} -  #{l(event.ends_at, format: "%H:%M")} (#{event.duration} min)
            /#{event.starts_at.strftime("%A")} #{event.starts_at.strftime('%d/%b/%Y %H:%M')} - #{event.ends_at.strftime('%H:%M')} (#{event.duration} min)
          %td
            = status_label(event.status)
            .row
            = number_to_currency(event.client_price_cents, unit: "#{Tenant.current_tenant.default_currency.upcase}", format: "%n %u")
          %td
            - event.jobs.each do |job|
              .row
              .badge.badge-secondary
                = link_to job.service.full_name_with_price, service_path(job.service), class: 'text-white'
                \/
                = link_to job.member, member_path(job.member), class: 'text-white'
            .row
            = truncate(event.notes, length: 25)
          /%td= l(event.created_at, format: :long)
.container
  = will_paginate @events, renderer: WillPaginate::ActionView::BootstrapLinkRenderer
%br
