-# frozen_string_literal: true
- set_var 'locale', Tenant.current_tenant.locale

/= simple_form_for(@event) do |f|
= simple_form_for @event, remote: true do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

  .form-inputs
    /= f.input_field :starts_at, input_html: { class: "starter" }
    /= f.input_field :starts_at, value: Date.today, class: 'form-control input-sm start_hidden'
    /= f.input_field :ends_at, as: :hidden, value: Date.today, class: 'form-control input-sm end_hidden'

    /= f.input :starts_at, :minute_step => 15, start_year: Date.today.year
    /= f.text_field :published_at, data: { :date_format => 'YYYY/MM/DD hh:mm' }, :class => 'form-control datetimepicker', placeholder: 'YYYY/MM/DD hh:mm:ss'
    = f.text_field :starts_at, id: 'datetimepicker', :value => (f.object.starts_at.blank? ? '' : f.object.starts_at.strftime('%d/%m/%Y %H:%M')), hidden: true
    .row
    /.fa.fa-user
    = f.label :client
    = f.error :client, class: 'text-danger'
    = f.select :client_id, Client.all.map{|c| [c.full_name, c.id]}, {include_blank: Client.all.length > 1}, class: 'selectize'
    /= f.input :client_id, input_html: {value: @event.client_id || params[:client_id]}

    /.fa.fa-map-marker-alt
    /= f.label :location_id
    /= f.error :location, class: 'text-danger'
    /= f.select :location_id, Location.all.map{|c| [c.name, c.id]}, {include_blank: Location.all.length > 1}, class: 'selectize'
    = f.association :location, collection: f.object.location_id ? Location.active_or_id(f.object.location_id) : Location.active, :include_blank => false

    /%h3 Jobs:
    .jobs
      = f.simple_fields_for :jobs do |job|
        = render 'job_fields', f: job
      .links
        = link_to_add_association t('.add_service'), f, :jobs, class: 'btn btn-primary'
    /.table-responsive
    /  %table.table-sm
    /    %thead
    /      %tr
    /        /%th{:colspan => "3"}
    /        %th= t('service')
    /        %th= t('member')
    /        %th
    /    %tbody.jobs
    /      = f.simple_fields_for :jobs do |f|
    /        = render 'job_fields', f: f
    /  .links
    /    = link_to_add_association t('.add_service'), f, :jobs, data: {"association-insertion-node" => "tbody.jobs", "association-insertion-method" => "append"}, class: 'btn btn-primary'
    %hr
    = f.input :percent_off
    = f.input :amount_off
    = f.input :notes, :input_html => {:rows => 5}
    = f.file_field :files, multiple: true
    - if @event.files.any?
      - @event.files.each do |file|
        .row
        = file.filename
    /= f.file_field :files, multiple: true, direct_upload: true
    %hr
  .form-actions
    = f.button :submit, class: 'btn btn-success'
    /= link_to 'Delete', event, method: :delete, class: 'btn btn-danger', data: { confirm: 'Are you sure?' }, remote: true unless @event.new_record?
