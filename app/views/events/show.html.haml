- model_class = Event
.row
  .container
    .card{:style => "border-color:#{@event.status_color};"}
      .card-header{:style => "border-color:#{@event.status_color};"}
        .fa.fa-calendar-alt
        =t '.title', :default => model_class.model_name.human.titleize
        .float-right
          = link_to '', event_path(@event, format: :pdf), class: "btn btn-primary fa fa-file-pdf btn-sm", target: :_blank
          = link_to '', edit_event_path(@event), class: "btn btn-warning fa fa-edit btn-sm" if policy(@event).edit?
          = link_to '', @event, method: :delete, data: { confirm: 'Are you sure?' }, class: "btn btn-danger fa fa-trash btn-sm" if policy(@event).destroy?
        - if @event.client.phone_number.present?
          .float-right.mr.mr-1
            = link_to "https://api.whatsapp.com/send?phone=#{@event.client.phone_number_only_digits}&text=#{@event.sms_text}&source=&data=", class: "btn btn-success btn-sm fa", :target => "_blank" do
              .fab.fa-whatsapp
              .fa.fa-users
        - if @event.client.email.present? && @event.client.event_created_notifications?
          .float-right.mr.mr-1
            = button_to send_email_to_client_event_path(@event), method: :patch, class: 'btn btn-success btn-sm fa' do 
              .far.fa-envelope
              .fa.fa-users
              /= t '.email_client'
        - if @event.users.distinct.pluck(:email).present?
          .float-right.mr.mr-1
            = button_to send_email_to_members_event_path(@event), method: :patch, class: 'btn btn-success btn-sm fa' do 
              .far.fa-envelope
              .fa.fa-user-tie
              /= t '.email_members'
      .card-body
        - if policy(@event).edit?
          .dropdown.show
            %a#dropdownMenuLink.btn.btn-sm.btn-default.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :href => "#", :role => "button"}
              = status_label(@event.status)
            .dropdown-menu.transparent{"aria-labelledby" => "dropdownMenuLink"}
              .btn-group-vertical
                - unless @event.planned?
                  = link_to t('.planned'), mark_planned_event_path(@event), method: :patch, class: 'btn btn-sm btn-primary'
                - unless @event.confirmed?
                  = link_to t('.confirmed'), mark_confirmed_event_path(@event), method: :patch, class: 'btn btn-sm btn-success'
                - unless @event.no_show?
                  = link_to t('.no_show'), mark_no_show_event_path(@event), method: :patch, class: 'btn btn-sm btn-danger mr-sm-2'
                - unless @event.member_cancelled?
                  = link_to t('.member_cancelled'), mark_member_cancelled_event_path(@event), method: :patch, class: 'btn btn-sm btn-danger mr-sm-2'
                - unless @event.client_cancelled?
                  = link_to t('.client_cancelled'), mark_client_cancelled_event_path(@event), method: :patch, class: 'btn btn-sm btn-danger mr-sm-2'
                - unless @event.no_show_refunded?
                  = link_to t('.no_show_refunded'), mark_no_show_refunded_event_path(@event), method: :patch, class: 'btn btn-sm btn-success mr-sm-2'
        - else
          = status_label(@event.status)
          .row
        .fa.fa-users
        %b= model_class.human_attribute_name(:client_id) + ':'
        = link_to @event.client, client_path(@event.client)

        .row
        - if @event.client.phone_number.present? && policy(Client).show_phone?
          .row
          .fa.fa-phone
          = link_to "tel:#{@event.client.phone_number}", class: "button" do
            #{number_to_phone(@event.client.phone_number)}
          = link_to "viber://chat?number=#{@event.client.phone_number}", class: "button" do
            .fab.fa-viber
        .row
        .fa.fa-map-marker-alt
        %b= model_class.human_attribute_name(:workplace) + ':'
        = link_to @event.workplace, workplace_path(@event.workplace)
        .row
        .fa.fa-clock
        %b= model_class.human_attribute_name(:time) + ':'
        #{l(@event.starts_at, format: "%A %d/%b/%Y %H:%M")} -  #{l(@event.ends_at, format: "%H:%M")} (#{@event.duration} min)
        %p
        = render 'events/jobs_index'
        %b= model_class.human_attribute_name(:event_price_cents) + ':'
        %b= number_to_currency(@event.event_price_cents, unit: "#{Tenant.current_tenant.default_currency.upcase}", format: "%n %u")
        .row
        %b
          .form-inline
            = model_class.human_attribute_name(:event_due_price) + ':'
            .text-success.mr.ml-1
              = number_to_currency(@event.event_due_price_cents, unit: "#{Tenant.current_tenant.default_currency.upcase}", format: "%n %u")
        - if @event.notes.present?
          %hr
          %b= model_class.human_attribute_name(:notes) + ':'
          %small= simple_format(@event.notes)
        - if @event.files.any?
          %hr
          %b
            .fa.fa-paperclip
            = model_class.human_attribute_name(:files) + ':'
          - @event.files.each do |file|
            .row
            = link_to file.filename, rails_blob_path(file, disposition: "file"), target: :_blank
      .card-header
        - if @event.transactions.any?
          = render "transactions/index"
        - if @event.confirmed? || @event.no_show_refunded?
          %p
          = render 'events/new_payment'
%br
=  render 'dashboard/activity'